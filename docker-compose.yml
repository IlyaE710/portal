version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    working_dir: "/app/"
    volumes:
      - ./:/app/:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./web:/var/www/web
      - ./logs:/var/log/nginx
    ports:
      - 80:80
#    depends_on:
#      - php
#      - postgres

  php:
    build:
      context: ./docker/php
    container_name: php
    working_dir: "/app"
    volumes:
      - ./:/app
  postgres:
    image: postgres:15
    container_name: postgres
    restart: "unless-stopped"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata"
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
      - ./docker/postgres:/var/lib/postgresql/data
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    volumes:
      - ./backups:/backups
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
  composer:
    image: composer/composer:2.5.5
    container_name: composer
    volumes:
      - ./:/app
    command:
      - install

#docker run --rm -it -v "$(pwd):/app" composer/composer:2.1.8 dump-autoload
#docker run --rm -it -v "$(pwd):/app" composer/composer:2.1.8 update
#docker run --rm -it -v "$(pwd):/app" composer/composer:2.1.8 install
